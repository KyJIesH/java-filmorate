create table if not exists films (
  film_id bigint generated by default as identity not null primary key,
  name varchar(255) not null,
  description varchar(255) not null,
  release_date date,
  duration_minutes integer,
  mpa_rating_id integer
);

create table if not exists likes (
  film_id bigint,
  user_id bigint
);

create table if not exists genres (
  genre_id integer generated by default as identity not null primary key,
  name varchar(255) not null unique
);

create table if not exists film_genres (
  film_id bigint,
  genre_id integer,
  PRIMARY KEY ("film_id", "genre_id")
);

create table if not exists mpa_ratings (
  rating_id integer generated by default as identity not null primary key,
  name varchar(255) not null unique
);

create table if not exists users (
  user_id bigint generated by default as identity not null primary key,
  email varchar(255) not null,
  login varchar(255) not null,
  name varchar(255),
  birthday date
);

create table if not exists friends (
  first_user_id bigint,
  second_user_id bigint
);

ALTER TABLE likes ADD FOREIGN KEY (film_id) REFERENCES films (film_id);

ALTER TABLE likes ADD FOREIGN KEY (user_id) REFERENCES users (user_id);

ALTER TABLE film_genres ADD FOREIGN KEY (film_id) REFERENCES films (film_id);

ALTER TABLE film_genres ADD FOREIGN KEY (genre_id) REFERENCES genres (genre_id);

ALTER TABLE films ADD FOREIGN KEY (mpa_rating_id) REFERENCES mpa_ratings (rating_id);

ALTER TABLE friends ADD FOREIGN KEY (first_user_id) REFERENCES users (user_id);

ALTER TABLE friends ADD FOREIGN KEY (second_user_id) REFERENCES users (user_id);