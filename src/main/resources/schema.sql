drop table IF EXISTS films CASCADE;
drop table IF EXISTS film_genres CASCADE;
drop table IF EXISTS users CASCADE;
drop table IF EXISTS friends CASCADE;
drop table IF EXISTS likes CASCADE;

create TABLE IF NOT EXISTS mpa_ratings
(
    rating_id     INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name          VARCHAR NOT NULL UNIQUE
);

create TABLE IF NOT EXISTS films
(
    film_id             BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name                VARCHAR(100) NOT NULL,
    description         VARCHAR(1024),
    release_date        DATE,
    duration_minutes    INTEGER CHECK (duration_minutes > 0),
    mpa_rating_id       INTEGER REFERENCES mpa_ratings (rating_id)
);

create TABLE IF NOT EXISTS genres
(
    genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name     VARCHAR(30) NOT NULL UNIQUE
);

create TABLE IF NOT EXISTS film_genres
(
    film_id  BIGINT  NOT NULL REFERENCES films (film_id),
    genre_id INTEGER NOT NULL REFERENCES genres (genre_id)
);

create TABLE IF NOT EXISTS users
(
    user_id  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email    VARCHAR(50) NOT NULL UNIQUE,
    login    VARCHAR(50) NOT NULL UNIQUE,
    name     VARCHAR(50) NOT NULL,
    birthday DATE    NOT NULL
);

create TABLE IF NOT EXISTS friends
(
    first_user_id BIGINT  NOT NULL REFERENCES users (user_id),
    second_user_id   BIGINT  NOT NULL REFERENCES users (user_id),
    PRIMARY KEY (first_user_id, second_user_id)
);

create TABLE IF NOT EXISTS likes
(
    film_id BIGINT NOT NULL REFERENCES films (film_id),
    user_id BIGINT NOT NULL REFERENCES users (user_id)
);